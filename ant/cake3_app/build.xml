<?xml version="1.0" encoding="UTF-8"?>
<project name="cake3_app" default="build" basedir=".">
	<property name="dir.ant.build" value="${basedir}/logs/quality/App" />
	<property name="dir.cakephp.app" value="${basedir}" />
	<property name="dir.cakephp.tmp" value="${basedir}/tmp" />
    <property name="file.phpcs.ruleset" value="${basedir}/contrib/phpcs.xml" />
	<property name="file.phpmd.ruleset" value="${basedir}/contrib/phpmd.xml" />
	<property name="file.phpunit.config" value="${basedir}/contrib/phpunit.xml" />
	<property name="ignorelist" value="*/plugins/*,*/tests/*,*/vendor/*" />
	<!-- =================================================================== -->
	<!-- High level targets -->
	<!-- @fixme -->
	<!--<target name="quality" depends="clean,lint,phpunit,phploc,phpdoc,phpcs,phpmd,pdepend,phpcpd,phpcb"/>-->
	<target name="quality" depends="clean,lint,phploc,phpdoc,phpcs,phpmd,pdepend,phpcpd,phpcb"/>
	<target name="build" depends="lint,phpunit"/>
	<target name="lint" depends="php-lint,sql-lint,js-lint,css-lint,xml-lint"/>
	<!-- =================================================================== -->
	<!-- Log and tmp folders cleanup -->
	<target name="clear">
		<delete verbose="true">
			<fileset dir="${dir.cakephp.tmp}" excludes="**/.svn,**/empty" />
		</delete>
        <delete dir="${dir.ant.build}" verbose="true" />
	</target>

	<!-- Log folders creation -->
	<target name="clean" depends="clear">
		<mkdir dir="${dir.ant.build}" />
		<mkdir dir="${dir.ant.build}/api" />
		<mkdir dir="${dir.ant.build}/artifacts" />
		<mkdir dir="${dir.ant.build}/coverage" />
		<mkdir dir="${dir.ant.build}/logs" />
		<mkdir dir="${dir.ant.build}/php-code-browser" />
	</target>
	<!-- =================================================================== -->
	<!-- Syntax checking for .php and .ctp files -->
	<target name="php-lint">
		<apply executable="php" dir="${basedir}" failonerror="on" logerror="on">
			<arg line="-l"/>
			<fileset dir="."
				includes="**/*.php,**/*.ctp"
				excludes="logs/**,plugins/**,tmp/**,vendor/**" />
		</apply>
	</target>

	<!-- Syntax checking for .sql files (PostgreSQL) -->
	<target name="sql-lint">
		<exec executable="bash" failonerror="on" logerror="on">
		  <arg value="-c"/>
		  <arg value="find . -name '*.sql' | grep -v '^\./\(logs\|plugins\|tmp\|vendor\)' | xargs pgsanity"/>
		</exec>
	</target>

	<!-- Syntax checking for .po files -->
	<target name="po-lint">
		<apply executable="msgfmt" dir="${basedir}" failonerror="on" logerror="on">
			<arg line="-v"/>
			<arg line="-C"/>
			<arg line="-o /dev/null"/>
			<fileset dir="."
				includes="**/*.po"
				excludes="logs/**,plugins/**,tmp/**,vendor/**" />
		</apply>
	</target>

	<!-- Syntax checking for .js files -->
	<target name="js-lint">
		<apply executable="esvalidate" dir="${basedir}" failonerror="on" logerror="on">
			<fileset dir="."
				includes="**/*.js"
				excludes="logs/**,plugins/**,tmp/**,vendor/**" />
		</apply>
	</target>

	<!-- Syntax checking for .css files -->
	<target name="css-lint">
		<apply executable="csslint" dir="${basedir}" failonerror="on" logerror="on">
			<arg line="--format=compact"/>
			<arg line="--warnings=display-property-grouping,duplicate-properties,empty-rules,known-properties"/>
			<fileset dir="."
				includes="**/*.css"
				excludes="logs/**,plugins/**,tmp/**,vendor/**" />
		</apply>
	</target>

	<!-- Syntax checking for .xml and .xsl files -->
	<target name="xml-lint">
		<apply executable="xmllint" dir="${basedir}" failonerror="on" logerror="on">
			<arg line="--noout"/>
			<fileset dir="."
				includes="**/*.x*l"
				excludes="logs/**,plugins/**,tmp/**,vendor/**" />
		</apply>
	</target>
	<!-- =================================================================== -->
	<!-- Unit tests -->
	<target name="phpunit_only">
		<exec executable="vendor/bin/phpunit" dir="${basedir}" failonerror="true">
			<arg line="--report-useless-tests
                       --verbose
                       --debug
					   --configuration ${file.phpunit.config}
                       ." />
		</exec>
	</target>

	<!-- Unit tests with coverage report -->
	<target name="phpunit" depends="clean,php-lint">
		<exec executable="vendor/bin/phpunit" dir="${basedir}" failonerror="true">
			<arg line="--report-useless-tests
                       --verbose
                       --debug
					   --configuration ${file.phpunit.config}
					   --log-junit ${dir.ant.build}/logs/phpunit.xml
                       --coverage-html ${dir.ant.build}/coverage
                       --coverage-clover ${dir.ant.build}/logs/phpunit.coverage.xml
                       ." />
		</exec>
	</target>
	<!-- =================================================================== -->
	<!-- Code metrics (files, classes, etc) -->
	<target name="phploc" depends="clean,php-lint">
		<exec executable="phploc" dir="${basedir}">
			<arg line="--log-csv ${dir.ant.build}/logs/phploc.csv
				--exclude logs
				--exclude vendor
				--exclude tmp
				--exclude plugins
				." />
		</exec>
	</target>

	<!-- Documentation -->
	<target name="phpdoc" depends="clean,php-lint">
		<exec executable="phpdoc" dir="${basedir}" failonerror="false" logerror="on">
			<arg line="--title '${ant.project.name}'
				-t ${dir.ant.build}/api
				--ignore logs/**
				--ignore vendor/**
				--ignore tmp/**
				--ignore plugins/**
				-d ."/>
			</exec>
	</target>

	<!-- Checkstyle -->
	<!--@fixme-->
	<target name="phpcs" depends="clean,php-lint">
		<exec executable="vendor/bin/phpcs"
			  dir="${basedir}"
			  failonerror="false">
			<arg line="--standard=${file.phpcs.ruleset}
                       --extensions=php,ctp
                       --runtime-set testVersion 5.6-7.0
                       --report-checkstyle=${dir.ant.build}/logs/phpcs.xml
					   --ignore=config/routes.php,logs,plugins,tmp,tests,vendor
                       ." />
		</exec>
	</target>

	<!-- Mess detector -->
	<!--@fixme-->
	<target name="phpmd" depends="clean,php-lint">
		<exec executable="phpmd"
			dir="${basedir}"
			failonerror="false">
			<arg line="${basedir}/src,${basedir}/tests
                       xml ${file.phpmd.ruleset}
                       --suffixes=.php,.ctp
                       --reportfile ${dir.ant.build}/logs/phpmd.xml"/>
		</exec>
	</target>

	<!-- DÃ©pendences -->
	<target name="pdepend" depends="clean,php-lint">
		<exec executable="pdepend"
			dir="${basedir}"
			failonerror="false">
			<arg line="--summary-xml=${dir.ant.build}/logs/jdepend-summary.xml
				--jdepend-xml=${dir.ant.build}/logs/jdepend.xml
				--jdepend-chart=${dir.ant.build}/artifacts/10-dependencies.svg
				--overview-pyramid=${dir.ant.build}/artifacts/11-overview.svg
				--ignore=config/routes.php,logs,plugins,tmp,tests,vendor
				." />
		</exec>
	</target>

	<!-- Copy/paste detector -->
	<target name="phpcpd" depends="clean,php-lint">
		<exec executable="phpcpd"
			dir="${basedir}"
			failonerror="false">
			<arg line="--log-pmd ${dir.ant.build}/logs/pmd-cpd.xml
				--min-lines 5
				--min-tokens 70
				--exclude logs
				--exclude vendor
				--exclude tmp
				--exclude plugins
				--names *.php,*.ctp
				." />
		</exec>
	</target>
	<!-- =================================================================== -->
	<!-- Code browser -->
	<target name="phpcb" depends="clean,php-lint">
		<exec executable="phpcb"
			dir="${basedir}"
			failonerror="false">
			<arg line="--log ${dir.ant.build}/logs
				--source ${basedir}
				-E /\/(logs|tmp|vendor|plugins)\//
				--output ${dir.ant.build}/php-code-browser
				--crapThreshold=10
			." />
		</exec>
	</target>
</project>